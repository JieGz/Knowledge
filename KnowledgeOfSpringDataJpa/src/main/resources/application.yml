spring:
  application:
    name: Lucky
  datasource:
    name: Location
    druid:
      initial-size: 1 #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认值为0
      min-idle: 1     #最小连接池的数量，默认值为空，应该是0，留待后面确认
      max-active: 8   #最大连接池的数量，默认值为8
      max-wait: 60000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      pool-prepared-statements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。默认值为-1
      max-open-prepared-statements: -1 # 等价于  max-pool-prepared-statement-per-connection-size: 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100。默认值是-1，但在MySQL下建议关闭PSCache!
      validation-query: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validation-query为null， test-on-borrow、test-on-return、testWhileIdle都不会起作用。默认值为null
      validation-query-timeout: 10 #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认值为：true
      test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认值为:false
      test-while-idle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。默认值为:false
      #time-between-eviction-runs-millis:60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒(有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明).默认值1分钟.
      #min-evictable-idle-time-millis: 600000 #连接保持空闲而不被驱逐的最小时间,单位毫秒
      #max-evictable-idle-time-millis: 900000 #连接保持空闲而不被驱逐的最大时间,单位毫秒
      keep-alive: true #连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。默认false(保活)
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      #proxy-filters:  #类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
      url: jdbc:mysql://120.79.21.18:3306/knowledge?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8&useSSL=true
      username: root
      password: pioneerbnxd8888..*..
      driver-class-name: com.mysql.jdbc.Driver
  jpa:
    database: mysql
    generate-ddl: false
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        enable_lazy_load_no_trans: true
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      ddl-auto: update